library(dplyr)
filter(claims, claims[,7]=="low")
plot(filter(claims$Y, claims$x6=="low"))
plot(filter(claims, claims$x6=="low")[,1])
plot(filter(claims, claims$x6=="low")[,1], col="red")
points(filter(claims, claims$x6=="medium")[,1], col="blue")
points(filter(claims, claims$x6=="high")[,1], col="green")
tester=claims[,c(1,7)]
tester
plot(tester)
library(ggplot2)
ggplot(tester)
ggplot(tester, aes(x=tester$x6, y=tester$Y))
ggplot(tester, aes(x=tester$x6, y=tester$Y) + geom_boxplot(aes(fill=Label)))
rlang::last_error()
rlang::last_trace()
ggplot(tester, aes(x=x6, y=Y) + geom_boxplot(aes(fill=Label)))
ggplot(tester, aes(x=x6, y=Y) + geom_boxplot(aes()))
?aes()
ggplot(tester, aes(x=x6, y=Y) + geom_boxplot()
ggplot(tester, aes(x=x6, y=Y) + geom_boxplot())
ggplot(tester, aes(x=x6, y=Y)) + geom_boxplot(aes(fill=Label))
ggplot(tester, aes(x=x6, y=Y)) + geom_boxplot(aes())
t.test(filter(claims, claims$x6=="low")$Y,filter(claims, claims$x6=="medium")$Y)
t.test(filter(claims, claims$x6=="low")$Y,filter(claims, claims$x6=="high")$Y)
t.test(filter(claims, claims$x6=="medium")$Y,filter(claims, claims$x6=="high")$Y)
install.packages("broom")
install.packages("purr")
install.packages("purrr")
install.packages("purrr")
install.packages("purrr")
install.packages("purrr")
a=t.test(filter(claims, claims$x6=="medium")$Y,filter(claims, claims$x6=="high")$Y)
a
a=c(t.test(filter(claims, claims$x6=="medium")$Y,filter(claims, claims$x6=="high")$Y))
library(tinytex)
install_tinytex()
?matrix
install.packages("kableExtra")
?log
claims.train=claims[1:300]
claims.train=claims[,1:300]
claims.train=head(claims, 300)
dim(claims.train)
dim(claims-claims.train)
?tail
claims.test=tail(claims, -300)
dim(claims.test)
plot(claims.test$x2, claims.test$Y)
plot(claims.test$Y ~ claims.test$x2)
lm(claims.test$Y ~ claims.test$x2)
summary(lm(claims.test$Y ~ claims.test$x2))
summary(lm(claims.test$Y ~ claims.test$x2^2))
summary(lm(claims.test$Y ~ claims.test$x2*claims.test$x2+claims.test$x2))
summary(lm(claims.test$Y ~ (claims.test$x2)^2))
line(lm(claims.test$Y ~ (claims.test$x2)^2))
?square
?power
?index
?lm
?summarize
install.packages(stargazer)
install.packages(stagazer)
install.packages(finalfit)
install.packages("stargazer")
?stargazer
library(stargazer)
?stargazer
install.packages(finalfit)
install.packages("finalfit)
install.packages("finalfit")
?finalfit
library(finalfit)
library(finalfit)
?finalfit
remove.packages("finalfit", lib="~/R/win-library/4.1")
install.packages("texreg")
library(texreg)
?textreg
library(texreg)
?texreg
?stargazer
install_tinytex()
?I()
tinytex_root()
?stargazer
?abline
third=lm(claims.test ~ claims.test$x2 + I(claims.test$x2^2) + I(claims.test$x2^3))
third=lm(claims.test$Y ~ claims.test$x2 + I(claims.test$x2^2) + I(claims.test$x2^3))
summary(third)
plot(claims.test$x2, claims.test$Y)
abline(third)
?lm
abline(q2.c)
third=lm(claims.test$Y ~ claims.train$x2 + I(claims.train$x2^2) + I(claims.train$x2^3))
third=lm(claims.train$Y ~ claims.train$x2 + I(claims.train$x2^2) + I(claims.train$x2^3))
summary(third)
plot(claims.train$x2, claims.train$Y)
abline(third)
plot(claims.test$x2, claims.test$Y)
abline(third)
?abline
?anova
second=lm(claims.train$Y ~ claims.train$x2 + I(claims.train$x2^2))
?mse
??mse
mean(summary(third)$residuals^2)
mean(summary(second)$residuals^2)
mean(summary(first)$residuals^2)
first=lm(claims.train$Y ~ claims.train$x2)
mean(summary(first)$residuals^2)
?MSE
?MSE()
MSE(first, claims.train)
summary(first)$signma
summary(first)$sigma
mean(sfirst$residuals^2)
mean(first$residuals^2)
anova(first)
?anova
install.packages("MLmetrics")
library(MLmetrics)
MSE(first, claims.test$Y)
MSE(first$fitted.values, claims.test$Y)
MSE(first$fitted.values, claims.train$Y)
?kable
?resid
resit(third, claims.train)
resid(third, claims.train)
resid(third)
plot(third$fitted.values, claims.test)
plot(third$fitted.values, claims.train)
plot(third$fitted.values, claims.train$Y)
plot(third$fitted.values, claims.test$Y)
?pred
?predict
third.pred=predict(third, claims.test)
?MLmetrics
library(MLmetrics)
?MLmetrics
?MSE
resid(third, claims.train)
mean(first$residuals^2)
warnings()
?matrix
?kable
attach(claims.test)
rm(x5)
attach(claims.test)
q4.c = lm(claims.test$Y ~ claims.test$x2 + I(claims.test$x2^2) + claims.test$x4 + claims.test$x3)
MSE(q4.c$fitted.values, claims.test$Y)
library(MLmetrics)
MSE(q4.c$fitted.values, claims.test$Y)
?var.test
var.test(q4.c, data=claims.train)
var.test(formula=q4.c, data=claims.train)
?filter
?t.test
t.test(claims.test$Y, claims.train$Y)
a=t.test(claims.test$Y, claims.train$Y)
a$p.value
a$statistic
options(digits=2)
a$statistic
options(digits=9)
round(a$statistic, 3)
?data.frame
Y
test.pro = claims.test$Y
test.pro
test.pro2 = data.frame(claims.test$Y)
test.pro = test.pro2
test.pro = claims.test$Y
test.pro == test.pro2
?predict
?names()
?plot
?mse
?MSE
library(MLmetrics)
?mse()
?mse
?MSE
?list
claim.new = sapply(claims.test, unclass)
claim.new.head()
claim.new.head
head(claim.new.head)
head(claim.new)
claim.new
claims.test
?unclass
claims.test$x6 = unclass(claims.test$x6)
clams.test
claims.test
claims.test$x6
claims$x6 <- unclass(claims$x6)
claims
library(dplyr)
glimpse(claims)
claims %>% mutate_if(is.character, as.numeric)
claims = claims.test + claims.train
testmod = lm(claims.test$Y ~ factors(claims.test$x6) + claims.test$x3 )
testmod = lm(claims.test$Y ~ factor(claims.test$x6) + claims.test$x3 )
summary(testmod)
?stargazer
library(stargazer)
?stargazer
?legend
b=MSE(q4.c$fitted.values, claims.test$Y)
library(MLmetrics)
b=MSE(q4.c$fitted.values, claims.test$Y)
?b
b
pred=predict(q4.c, newdata=data.frame(claims.test$x2))
pred
testp=data.frame(claims.test$x2)
namees(testp) = "x2"
names(testp) = "x2"
pred=predict(q4.c, newdata=data.testp)
pred=predict(q4.c, newdata=testp)
pred
c=(claims.test$x2 - pred)
?t.test
d=t.test(claims.test$x2, pred, paired=TRUE)
d$p.value
?matrix
?lm
?kable
library(ISLR)
> fix(Hitters )
> names(Hitters)
library(ISLR)
fix(Hitters)
names(Hitters)
dim(Hitters)
sum(is.na(Hitters$Salary))
Hitters=na.omit(Hitters)
dim(hitters)
dim(Hitters)
sum(is.na(Hitters))
library(leaps)
install.packages(leaps)
install.packages("leaps")
library(leaps)
regfit.full=regsubsets (Salary∼.,Hitters)
summary(regfit.full)
regfit.full=regsubsets (Salary∼.,data=Hitters ,nvmax=19)
reg.summary =summary (regfit.full)
names(reg.summary)
reg.summary$rsq
par(mfrow=c(2,2))
plot(reg.summary$rss ,xlab="Number of Variables ",ylab="RSS",
type="l")
plot(reg.summary$adjr2 ,xlab="Number of Variables ",
ylab="Adjusted RSq",type="l")
which.max(reg. summary$adjr2)
which.max(reg.summary$adjr2)
points (11,reg.summary$adjr2[11], col="red",cex=2,pch =20)
plot(reg.summary$cp ,xlab="Number of Variables ",ylab="Cp",
type=’l’)
plot(reg.summary$cp ,xlab="Number of Variables ",ylab="Cp",type=’l’)
plot(reg.summary$cp ,xlab="Number of Variables",ylab="Cp",type=’l’)
> plot(reg.summary$cp ,xlab="Number of Variables ",
+      ylab="Cp",type="l")
> plot(reg.summary$cp ,xlab="Number of Variables ",ylab="Cp",type="l")
> plot(reg.summary$cp ,xlab="Number of Variables",ylab="Cp",type="l")
reg.summary
plot(reg.summary$cp)
install.packages("faraway")
library(faraway)
head(chmiss)
modmiss = lm(involact~race+fire+theft+age+income, chmiss)
summary(modmiss)
dim(chmiss)
chmiss[is.na(chmiss$race), ]
lmodr = lm(race~fire+theft+age+income+involact, chmiss)
preddict(lmodr, chmiss[is.na(chmiss$race), ]
preddict(lmodr, chmiss[is.na(chmiss$race), ])
predict(lmodr, chmiss[is.na(chmiss$race), ])
knitr::opts_chunk$set(echo = TRUE)
frames = read.csv("atkspeeed.csv")
frames = read.csv("/atkspeeed.csv")
frames = read.csv("/atkspeeed.csv",
frames = read.csv("/atkspeeed.csv",
frames = read.csv("/atkspeeed.csv",
frames = read.csv("/atkspeeed.csv",
frames = read.csv("/atkspeeed.csv")
setwd("D:/Other/Projects/ASexploration")
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("D://atkspeeed.csv")
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeeed.csv")
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("D:/atkspeeed.csv")
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("D:/atkspeeed.csv", header=TRUE)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("/atkspeeed.csv", header=TRUE)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE)
head(frames)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE)
head(frames)
attach(frames)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE)
head(frames)
attach(frames)
Fend.Finit = Frame.End - Frame.Init
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE)
head(frames)
attach(frames)
Fend.Finit = Frame.End - Frame.Init
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE)
head(frames)
Fend.Finit = Frame.End - Frame.Init
summary(frames)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE)
head(frames)
Fend.Finit = Frame.End - Frame.Init
AtkSpd = AtkSpd/100
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE)
Fend.Finit = Frame.End - Frame.Init
AtkSpd = AtkSpd/100
head(frames)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE)
Fend.Finit = Frame.End - Frame.Init
AtkSpd = AtkSpd/100
head(frames)
shenhe = frame[Char=="Shenhe"]
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE)
Fend.Finit = Frame.End - Frame.Init
AtkSpd = AtkSpd/100
head(frames)
shenhe = frame[frame$Char=="Shenhe",]
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE)
Fend.Finit = Frame.End - Frame.Init
AtkSpd = AtkSpd/100
head(frames)
setwd("D:/Other/Projects/ASexploration", colClasses=c("factor", "numeric", "numeric", "numeric", "numeric"))
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE, colClasses=c("factor", "numeric", "numeric", "numeric", "numeric"))
Fend.Finit = Frame.End - Frame.Init
AtkSpd = AtkSpd/100
head(frames)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE, colClasses=c("factor", "numeric", "numeric", "numeric", "numeric"))
Fend.Finit = Frame.End - Frame.Init
frames$AtkSpd = AtkSpd/100
head(frames)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE, colClasses=c("factor", "numeric", "numeric", "numeric", "numeric"))
Fend.Finit = Frame.End - Frame.Init
frames$AtkSpd = AtkSpd/100
head(frames)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE, colClasses=c("factor", "numeric", "numeric", "numeric", "numeric"))
Fend.Finit = Frame.End - Frame.Init
frames$AtkSpd = AtkSpd/100
head(frames)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE, colClasses=c("factor", "numeric", "numeric", "numeric", "numeric"))
Fend.Finit = Frame.End - Frame.Init
frames$AtkSpd = AtkSpd/100
head(frames)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE, colClasses=c("factor", "numeric", "numeric", "numeric", "numeric"))
Fend.Finit = Frame.End - Frame.Init
frames$AtkSpd = AtkSpd/100
head(frames)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE, colClasses=c("factor", "numeric", "numeric", "numeric", "numeric"))
Fend.Finit = Frame.End - Frame.Init
frames$AtkSpd = AtkSpd/100
head(frames)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE, colClasses=c("factor", "numeric", "numeric", "numeric", "numeric"))
Fend.Finit = Frame.End - Frame.Init
frames$AtkSpd = AtkSpd/100
head(frames)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE, colClasses=c("factor", "numeric", "numeric", "numeric", "numeric"))
Fend.Finit = Frame.End - Frame.Init
head(frames)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE, colClasses=c("factor", "numeric", "numeric", "numeric", "numeric"))
Fend.Finit = Frame.End - Frame.Init
frames$AtkSpd = AtkSpd/1
head(frames)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE, colClasses=c("factor", "numeric", "numeric", "numeric", "numeric"))
Fend.Finit = Frame.End - Frame.Init
frames$AtkSpd = AtkSpd*1000000
head(frames)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE, colClasses=c("factor", "numeric", "numeric", "numeric", "numeric"))
Fend.Finit = Frame.End - Frame.Init
frames$AtkSpd = AtkSpd*100000000
head(frames)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE, colClasses=c("factor", "numeric", "numeric", "numeric", "numeric"))
Fend.Finit = Frame.End - Frame.Init
frames$AtkSpd = AtkSpd*10000000000
head(frames)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE, colClasses=c("factor", "numeric", "numeric", "numeric", "numeric"))
Fend.Finit = Frame.End - Frame.Init
frames$AtkSpd = AtkSpd*10000000000
head(frames)
Shenhe = frames[frames$Char=="Shenhe"]
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE, colClasses=c("factor", "numeric", "numeric", "numeric", "numeric"))
Fend.Finit = Frame.End - Frame.Init
frames$AtkSpd = AtkSpd*10000000000
head(frames)
Shenhe = frames[frames$Char=="Shenhe",]
plot(Fend.Finit~AtkSpd)
plot(Fend.Finit~AtkSpd)
plot(Shenhe$Fend.Finit~Shenhe$AtkSpd)
plot(Razor$Fend.Finit~Razor$AtkSpd)
plot(Fend.Finit~AtkSpd)
plot(Shenhe$Fend.Finit~Shenhe$AtkSpd)
plot(Razor$Fend.Finit~Razor$AtkSpd)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE, colClasses=c("factor", "numeric", "numeric", "numeric", "numeric"))
Fend.Finit = Frame.End - Frame.Init
frames$AtkSpd = AtkSpd*10000000000
head(frames)
Shenhe = frames[frames$Char=="Shenhe",]
Chongyun = frames[frames$Char=="Chonyun",]
Razor = frames[frames$Char=="Razor",]
plot(Fend.Finit~AtkSpd)
plot(Shenhe$Fend.Finit~Shenhe$AtkSpd)
plot(Razor$Fend.Finit~Razor$AtkSpd)
plot(Chongun$Fend.Finit~Chongyun$AtkSpd)
plot(Fend.Finit~AtkSpd)
plot(Shenhe$Fend.Finit~Shenhe$AtkSpd)
plot(Razor$Fend.Finit~Razor$AtkSpd)
plot(Chongyun$Fend.Finit~Chongyun$AtkSpd)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE, colClasses=c("factor", "numeric", "numeric", "numeric", "numeric"))
Fend.Finit = Frame.End - Frame.Init
frames$AtkSpd = AtkSpd*10000000000
head(frames)
Shenhe = frames[frames$Char=="Shenhe",]
Chongyun = frames[frames$Char=="Chonyun",]
Razor = frames[frames$Char=="Razor",]
summary(Chongyun)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed.csv", header=TRUE, colClasses=c("factor", "numeric", "numeric", "numeric", "numeric"))
Fend.Finit = Frame.End - Frame.Init
frames$AtkSpd = AtkSpd*10000000000
head(frames)
Shenhe = frames[frames$Char=="Shenhe",]
Chongyun = frames[frames$Char=="Chongyun",]
Razor = frames[frames$Char=="Razor",]
summary(Chongyun)
plot(Fend.Finit~AtkSpd)
plot(Shenhe$Fend.Finit~Shenhe$AtkSpd)
plot(Razor$Fend.Finit~Razor$AtkSpd)
plot(Chongyun$Fend.Finit~Chongyun$AtkSpd)
plot(Fend.Finit~AtkSpd)
plot(Shenhe$Fend.Finit~Shenhe$AtkSpd)
shenhe.lm = lm(Shenhe$Fend.Finit~Shenhe$AtkSpd)
plot(Razor$Fend.Finit~Razor$AtkSpd)
plot(Chongyun$Fend.Finit~Chongyun$AtkSpd)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed2.csv", header=TRUE, colClasses=c("factor", "numeric", "numeric", "numeric", "numeric", "numeric"))
Fend.Finit = Frame.End - Frame.Init
frames$AtkSpd = AtkSpd*10000000000
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed2.csv", header=TRUE, colClasses=c("factor", "numeric", "numeric", "numeric", "numeric", "numeric"))
Fend.Finit = Frame.End - Frame.Init
head(frames)
Shenhe = frames[frames$Char=="Shenhe",]
Chongyun = frames[frames$Char=="Chongyun",]
Razor = frames[frames$Char=="Razor",]
plot(RelAtkFrame~AtkSpd)
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed2.csv", header=TRUE, colClasses=c("factor", "numeric", "numeric", "numeric", "numeric", "numeric"))
Fend.Finit = Frame.End - Frame.Init
head(frames)
Shenhe = frames[frames$Char=="Shenhe",]
Chongyun = frames[frames$Char=="Chongyun",]
Razor = frames[frames$Char=="Razor",]
attach(frames)
unattach(frames)
deattach(frames)
dettach(frames)
rm(list=ls())
setwd("D:/Other/Projects/ASexploration")
frames = read.csv("atkspeed2.csv", header=TRUE, colClasses=c("factor", "numeric", "numeric", "numeric", "numeric", "numeric"))
Fend.Finit = Frame.End - Frame.Init
head(frames)
Shenhe = frames[frames$Char=="Shenhe",]
Chongyun = frames[frames$Char=="Chongyun",]
Razor = frames[frames$Char=="Razor",]
attach(frames)
plot(RelAtkFrame~AtkSpd)
plot(Shenhe$Fend.Finit~Shenhe$AtkSpd)
plot(RelAtkFrame~AtkSpd)
